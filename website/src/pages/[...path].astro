---
import Debug from 'astro/debug';
import deepmerge from 'deepmerge';
// import { store, populateStore } from '@services/notionOne.js'
import { notionHelpers } from "@utils";
import * as layouts from '@layouts'
import pokoComponents from '../components/components.jsx'
import { toMdx } from '@services/notion.mjs'
import poko from '@poko'

const { MDXPage, AstroPage } = layouts

export async function getStaticPaths() {
  // const filePath = "src/_data/poko.json";
  // const systemPath = `${process.cwd()}/${filePath}`;

  // const poko = await import(systemPath)
  const { settings: _settings, pages: _pages, files, paths, websiteTree } = poko

  const settingsMDX = await toMdx(_settings.data.md)
  const settings = { ..._settings, data: { ..._settings.data, ...settingsMDX} }
  const pages = await Promise.all(_pages.map(async p => {
    const { MDXContent, exports: pageExports } = await toMdx(p.data.md)
    const pageProps = {...p.data?.props, ...pageExports}
    // Don't do this map if you want only the exports of the curent page (not inherit from parent pages and settings)
    const parentsProps = await Promise.all(p?.parents?.map(async parent => {
      const { exports } = await toMdx(parent.data.md)
      const parentProps = {...parent.data?.props, ...exports}
      return parentProps
    })) || []
    const propsCascade = [...parentsProps, pageProps]
    const props = deepmerge.all(propsCascade)
    return { ...p, MDXContent, ...props }
  }))

  return pages.map(page => {
    return { params: { path: page.data.path === '' ? undefined : page.data.path }, props: { settings, pages, page, files, paths, websiteTree } }
  })

  // return [{ params: { path: undefined }, props: {  } }]
}


const { settings, pages, page, files, paths, websiteTree } = Astro.props;
const markdownRenderer = page?.data?.props?.markdownRenderer?.toLowerCase() || 'mdx'

---

<!-- <SkeletonPage {...{ path, ...exports, metadata, components}}>
  <Debug {data} />
  <Fragment slot="head" set:html={settings.headString} />

  <MDXContent {...{ ...props, notionHelpers, components }} />
</SkeletonPage> -->


{markdownRenderer === 'mdx' && <MDXPage  {...Astro.props} />}
{markdownRenderer === 'astro' && <AstroPage  {...Astro.props} />}


